{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-selector.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-actions.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizeFilter","toLowerCase","trim","contact","name","includes","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","number","post","deleteContact","id","delete","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","map","alert","className","s","form","label","type","pattern","title","required","value","onChange","currentTarget","inputName","inputNumber","button","changeFilter","createAction","Filter","header","filterInput","ContactList","useEffect","list","listItem","onClick","App","createReducer","fulfilled","payload","error","rejected","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.116937e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__T3XEV\",\"header\":\"Filter_header__226Yt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3-Krr\",\"listItem\":\"ContactList_listItem__Cp0uB\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizeFilter = filter.toLowerCase().trim();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://61cae389194ffe00177889f2.mockapi.io/contacts';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', { name, number });\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contacts-selector';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChangeName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    contacts.map(contact => contact.name).includes(name) ||\n    contacts.map(contact => contact.number).includes(number)\n      ? alert(`${name} is already in contacts.`)\n      : dispatch(addContact({ name, number }));\n\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChangeName}\n          className={s.inputName}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChangeNumber}\n          className={s.inputNumber}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selector';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h4 className={s.header}>Find contacts by name</h4>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n        className={s.filterInput}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selector';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/contacts/contacts-operations';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ul className={s.list}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.listItem}>\n            {contact.name}: {contact.number}\n            <button onClick={() => onDeleteContact(contact.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ContactList;\n","import ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\nimport { changeFilter } from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.rejected]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3nLty\",\"button\":\"ContactForm_button__1cFKt\",\"label\":\"ContactForm_label__3S11i\",\"inputName\":\"ContactForm_inputName__274hB\",\"inputNumber\":\"ContactForm_inputNumber__KeRDC\"};"],"sourceRoot":""}